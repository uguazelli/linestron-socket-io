<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href='http://fonts.googleapis.com/css?family=Roboto' rel='stylesheet' type='text/css'>
    <title>Linestron</title>

    <style>
        html,
        body {
            height: 100%;
            width: 100%;
            margin: 0px;
            font-family: 'Roboto', sans-serif;

        }

        .container {
            width: 100%;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .card {
            width: 100%;
            max-width: 400px;
            height: 90%;
            max-height: 1024px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }

        #companyName {
            color: #219ebc;
            font-size: 400% !important;
        }

        .title {
            flex: 1;
            width: 100%;
            font-weight: bolder;
            text-align: center;
        }

        .number {
            flex: 2;
            width: 100%;
            display: flex;
            flex-direction: column;
            justify-content: space-around;
            align-items: center;
        }

        .numberHead {
            height: 20%;
            width: 90%;
            background-color: #023047;
            color: #fff;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .numberBody {
            height: 70%;
            width: 90%;
            background-color: #219ebc;
            color: #fff;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .current {
            flex: 2;
            width: 100%;
            display: flex;
            flex-direction: column;
            justify-content: space-around;
            align-items: center;
        }

        .currentHead {
            height: 20%;
            width: 90%;
            display: flex;
            justify-content: center;
            align-items: center;
            color: #3d1c42;
        }

        .currentBody {
            height: 40%;
            width: 90%;
            background-color: #fb8500;
            border-radius: 50px;
            color: #fff;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .time {
            flex: 3;
            width: 100%;
            display: flex;
            flex-direction: row;
            justify-content: center;
            align-items: center;
        }

        .timeTitle {
            background-color: #219ebc;
            color: #fff;
            width: 60%;
            height: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            text-align: center;
        }

        .timeValue {
            background-color: #219ebc;
            color: #fff;
            width: 30%;
            height: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
            text-align: center;
            border-right: 5px solid #fff;
        }

        .phone {
            flex: 1;
            width: 100%;
            display: flex;
            flex-direction: column;
            justify-content: space-around;
            align-items: center;
            text-align: center;
        }

        .footer {
            flex: 1;
            width: 100%;
            display: flex;
            flex-direction: column;
            justify-content: space-around;
            align-items: center;
            text-align: center;
        }

        .modal {
            position: fixed;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            opacity: 0;
            visibility: hidden;
            transform: scale(1.1);
            transition: visibility 0s linear 0.25s, opacity 0.25s 0s, transform 0.25s;
        }

        .modal-content {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: white;
            padding: 1rem 1.5rem;
            width: 24rem;
            border-radius: 0.5rem;
        }

        .close-button {
            float: right;
            width: 1.5rem;
            line-height: 1.5rem;
            text-align: center;
            cursor: pointer;
            border-radius: 0.25rem;
            background-color: lightgray;
        }

        .close-button:hover {
            background-color: darkgray;
        }

        .show-modal {
            opacity: 1;
            visibility: visible;
            transform: scale(1.0);
            transition: visibility 0s linear 0s, opacity 0.25s 0s, transform 0.25s;
        }



        .button {
            background-color: #1d6e7c;
            border: none;
            color: white;
            padding: 10px 15px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 4px 2px;
            cursor: pointer;
        }
    </style>

</head>

<body>


    <div id="modalNumber" class="modal">
        <div class="modal-content">
            <h3>Looks like you already got a number </h3>
            <h4>Number: <span id="savedNumber"></span></h4>
            <h4>Date: <span id="savedTime"></span></h4>
            <h3>Do you want to keep it?<span></span></h3>
            <button class="button" onclick="keepStorage()">Yes</button>
            <button class="button" onclick="cleanStorage()">No</button>
        </div>
    </div>
    <div id="modalPhone" class="modal">
        <div class="modal-content">
            <h3>Do you want to receive SMS notifications?</h3>
            <p><span>Phone Number: </span> <input id="phoneNumber" /></p>
            <button class="button" onclick="setPhone()">Yes</button>
            <button class="button" onclick="skypPhone()">No</button>
        </div>
    </div>

    <div class="container">
        <div class="card">
            <div class="title">
                <h1 id="companyName">Company Name</h1>
            </div>
            <div class="number">
                <div class="numberHead">
                    <h2>Your Number</h2>
                </div>
                <div class="numberBody">
                    <h2 id="clientNumber">0</h2>
                </div>
            </div>
            <div class="current">
                <!-- <hr style="border: 5px solid #219ebc;  width: 88%; "> -->
                <div class="currentHead">
                    <h2>Current Number</h2>
                </div>
                <div class="currentBody">
                    <h2 id="number">0</h2>
                </div>
            </div>
            <div class="time">
                <div class="timeValue">
                    <h3><span id="minutes">0</span> <br> minutes</h3>
                </div>
                <div class="timeTitle">
                    <h3>Is the expected <br> waiting time</h3>
                </div>
            </div>
            <div class="phone">
                <div class="phoneText">
                    <h4>Receive SMS notifications</h4>
                </div>
                <div class="phoneNumber">
                    <h4>
                        <span id="setPhone"></span>
                        <a href="javascript:void(0);" onclick="toggleModalPhone()">Change Number</a>
                    </h4>
                </div>
            </div>
            <div class="footer">
                <p>LINESTRON
                    <br>
                    Lines management system
                    <br>
                    www.linestron.com
                </p>

            </div>
        </div>
    </div>

    <script src="https://unpkg.com/imask"></script>


    <script src="/socket.io/socket.io.js"></script>

    <script>
        const socket = io();

        const getMinutesBetweenDates = (startDate, endDate) => {
            let currentDate = { "date_created": startDate }
            let currentDateParse = new Date(parseInt(currentDate.date_created));
            let previousDate = { "date_created": endDate }
            let previousDateParse = new Date(parseInt(previousDate.date_created));
            let diff = currentDateParse - previousDateParse;
            let minutes = Math.ceil(diff / 60000); //round up
            return minutes
        };

        const getRoomNames = () => {
            const url = window.location.href;
            const splittedUrl = url.split("/");
            const companyName = splittedUrl.findIndex((value) => value === "company") + 1
            const roomName = splittedUrl.findIndex((value) => value === "room") + 1
            const room = splittedUrl[companyName] + "_" + splittedUrl[roomName]
            return room
        }

        socket.emit("connectToRoom", getRoomNames());

        socket.on(getRoomNames(), function (msg) {
            document.getElementById('number').innerHTML = msg.number;
            const averageTime = getMinutesBetweenDates(msg.currentTime, msg.previousTime)
            document.getElementById('minutes').innerHTML = averageTime;
        });

        const getCurrentNumber = (async () => {
            let company_room = getRoomNames().split("_");
            let lastNumberUrl = `http://localhost:3000/room/${company_room[1]}/current`
            const numResponse = await fetch(lastNumberUrl);
            const num = await numResponse.json();
            document.getElementById('number').innerHTML = num.prefix + num.currentNumber
        })()

        const setRoomValues = async () => {
            let company_room = getRoomNames().split("_");
            let com;
            if (sessionStorage.getItem("companySaved")) {
                com = JSON.parse(sessionStorage.getItem("companySaved"));// Restore the contents of the text field
            } else {
                //API call
                let comUrl = `http://localhost:3000/room/${company_room[1]}/company/${company_room[0]}/number`
                const comResponse = await fetch(comUrl);
                com = await comResponse.json();
                sessionStorage.setItem("companySaved", JSON.stringify(com));
                const now = new Date().toUTCString()
                sessionStorage.setItem("savedTime", now);
                sessionStorage.setItem("numberNoPrefix", `${com.roomLastNumber}`);
                sessionStorage.setItem("number", `${com.prefix}${com.roomLastNumber}`);
            }

            document.title = com.companyName
            document.getElementById('companyName').innerHTML = com.companyName
            document.getElementById('clientNumber').innerHTML = `${com.prefix}${com.roomLastNumber}`
            modalPhone.classList.toggle("show-modal");
        }

        const modalNumber = document.querySelector("#modalNumber");
        const modalPhone = document.querySelector("#modalPhone");
        const toggleModalNumber = () => modalNumber.classList.toggle("show-modal");
        const toggleModalPhone = () => modalPhone.classList.toggle("show-modal");

        if (sessionStorage.getItem("companySaved")) {
            let savedNumber = sessionStorage.getItem("number");
            let savedTime = sessionStorage.getItem("savedTime");
            document.getElementById("savedNumber").innerHTML = savedNumber;
            document.getElementById("savedTime").innerHTML = savedTime;
            toggleModalNumber();
        } else {
            setRoomValues();
        }

        const cleanStorage = () => {
            sessionStorage.clear();
            toggleModalNumber();
            setRoomValues();

        }

        const keepStorage = () => {
            toggleModalNumber();
            setRoomValues();
        }

        const setPhone = async () => {
            let savedNumber = sessionStorage.getItem("numberNoPrefix");
            const phone = document.getElementById("phoneNumber").value
            let company_room = getRoomNames().split("_");
            const id = `${company_room[0]}_${company_room[1]}_${savedNumber}`;
            let phoneUrl = `http://localhost:3000/room/client/phone`;

            const response = await fetch(phoneUrl, {
                method: "POST",
                headers: { Accept: "application/json", "Content-Type": "application/json" },
                body: JSON.stringify({ id: id, phone: phone }),
            });
            document.getElementById("setPhone").innerHTML = phone
            toggleModalPhone()
        }


        // const changePhoneNumber = () => {
        //     alert()
        // }

        const skypPhone = () => toggleModalPhone()

        const element = document.getElementById('phoneNumber');
        const maskOptions = {
            mask: '+{1}(000)000-0000'
        };
        const mask = IMask(element, maskOptions);

    </script>

</body>

</html>